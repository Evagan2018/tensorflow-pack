# This is a basic workflow to help you get started with Actions

name: Release CI using Arm Virtual Hardware

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      revision:
        description: 'mlplatform revision'     
        required: true
        default: '22.02'
      candidate_rev:
        description: 'Release candidate revision'
        required: false
        default: '' 


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-tensorflow:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
  
      - name: Checkout tensorflow-build 
        uses: actions/checkout@v2
        with: 
          repository: MDK-Packs/tensorflow-pack
          path: tensorflow-pack

   #   - name: Create Container runtime from DockerHub
   #     run : |
   #       docker run -i -v ${{ github.workspace }}:/workspace/host --mac-address="00:02:F7:FF:55:55" --name build_runtime -d armswdev/cmsis_tools_m55:latest 
   #       docker exec build_runtime pip3 install six requests pyyaml junit_xml pillow
   #       docker exec build_runtime cp /workspace/host/tensorflow-pack/tensorflow-build/.wgetrc /root/.wgetrc 
   #       mkdir ${{ github.workspace }}/out/
    
      - name: Install tools
        run: |
          sudo apt install rsync
          pip3 install pillow semantic-version six requests junit_xml pyyaml pygithub
          mkdir ${{ github.workspace }}/out/

      - name: Get history of releases from github
        run: 
          python3 ./tensorflow-pack/tensorflow-build/get_releases.py ${{ secrets.GITHUB_TOKEN }} > ./tensorflow-pack/tensorflow-build/history.txt
          
      - name: Run the pack build with the revision specified
        run : 
          ./tensorflow-pack/tensorflow-build/build_r.sh ${{ github.event.inputs.revision }} ${{ github.event.inputs.candidate_rev }}

      - name: Copy tensorflow-pack to out path
        run :  
          cp ${{ github.workspace }}/tensorflow-pack/tensorflow-build/gen/build/*.pack ${{ github.workspace }}/out/

      - name: Run the 3rdparty pack build with the revision specified
        run : |
          export PATH=$PATH:${{ github.workspace }}/tensorflow-pack/tensorflow-build/gen/utilities
          ./tensorflow-pack/3rdparty-build/build_r.sh ${{ github.event.inputs.revision }} ${{ github.event.inputs.candidate_rev }}

      - name: Copy 3rdparty packs to out path
        run :  
          cp ${{ github.workspace }}/tensorflow-pack/3rdparty-build/*.pack ${{ github.workspace }}/out/

      - name: Upload Pack
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/out

      - name: Run unit tests on AVH@AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET }}
          AWS_IAM_PROFILE: ${{ secrets.AWS_IAM_PROFILE }}
          AWS_SECURITY_GROUP_ID: ${{ secrets.AWS_EC2_SECURITY_GROUP_ID }}
          AWS_SUBNET_ID: ${{ secrets.AWS_SUBNET_ID }}
        
        run: |
          ./tensorflow-pack/tensorflow-test-ng/test_r.sh
          pip install git+https://github.com/ARM-software/avhclient.git@v0.1
          mkdir ${{ github.workspace }}/tensorflow-pack/tensorflow-test-ng/out/
          cp ${{ github.workspace }}/out/*.pack ${{ github.workspace }}/tensorflow-pack/tensorflow-test-ng/out/   
          avhclient -b aws execute --specfile tensorflow-pack/tensorflow-test-ng/avh.yml

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/tensorflow-pack/**/test_results.*

